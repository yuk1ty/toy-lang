program = { SOI ~ topLevelDefinition* ~ EOI }
topLevelDefinition = { globalVariabledefinition | functionDefinition }
functionDefinition = { "define" ~ identifier ~ "(" ~ (identifier ~ ("," ~ identifier)*)? ~ ")" ~ blockExpression }
globalVariabledefinition = { "global" ~ identifier ~ "=" ~ expression }

line = { whileExpression | ifExpression | assignment | expressionLine | blockExpression }

expressionLine = { expression ~ ";" }
expression = { comparative }

comparative = { additive ~ (("<" | ">" | "<=" | ">=" | "==" | "!=") ~ additive)* }
additive = { multitive ~ (("+" | "-") ~ multitive)* }
multitive = { primary ~ (("*" | "/") ~ primary)* }
primary = { "(" ~ expression ~ ")" | integer | functionCall | identifier }

ifExpression = { "if" ~ "(" ~ expression ~ ")" ~ line ~ ("else" ~ line)? }
whileExpression = { "while" ~ "(" ~ expression ~ ")" ~ line }
blockExpression = { "{" ~ line ~ "}" }
assignment = { identifier ~ "=" ~ expression ~ ";" }
functionCall = { identifier ~ "(" ~ (expression ~ ("," ~ expression)*)? ~ ")" }

identifier = @{ ASCII_ALPHA+ }
integer = @{ ASCII_DIGIT+ }

WHITESPACE = _{ " " | "\t" | "\r" | "\n" }